/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Button;
import org.xtext.example.mydsl.myDsl.Checkbox;
import org.xtext.example.mydsl.myDsl.Description;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Radio;
import org.xtext.example.mydsl.myDsl.Selector;
import org.xtext.example.mydsl.myDsl.Siderbar;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Siderbar</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getRadio <em>Radio</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getCheckbox <em>Checkbox</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getButton <em>Button</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.SiderbarImpl#getSelector <em>Selector</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SiderbarImpl extends MinimalEObjectImpl.Container implements Siderbar
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getRadio() <em>Radio</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRadio()
   * @generated
   * @ordered
   */
  protected EList<Radio> radio;

  /**
   * The cached value of the '{@link #getCheckbox() <em>Checkbox</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCheckbox()
   * @generated
   * @ordered
   */
  protected EList<Checkbox> checkbox;

  /**
   * The cached value of the '{@link #getButton() <em>Button</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getButton()
   * @generated
   * @ordered
   */
  protected EList<Button> button;

  /**
   * The cached value of the '{@link #getSelector() <em>Selector</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected EList<Selector> selector;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SiderbarImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SIDERBAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIDERBAR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIDERBAR__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIDERBAR__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIDERBAR__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIDERBAR__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Radio> getRadio()
  {
    if (radio == null)
    {
      radio = new EObjectContainmentEList<Radio>(Radio.class, this, MyDslPackage.SIDERBAR__RADIO);
    }
    return radio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Checkbox> getCheckbox()
  {
    if (checkbox == null)
    {
      checkbox = new EObjectContainmentEList<Checkbox>(Checkbox.class, this, MyDslPackage.SIDERBAR__CHECKBOX);
    }
    return checkbox;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Button> getButton()
  {
    if (button == null)
    {
      button = new EObjectContainmentEList<Button>(Button.class, this, MyDslPackage.SIDERBAR__BUTTON);
    }
    return button;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Selector> getSelector()
  {
    if (selector == null)
    {
      selector = new EObjectContainmentEList<Selector>(Selector.class, this, MyDslPackage.SIDERBAR__SELECTOR);
    }
    return selector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SIDERBAR__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case MyDslPackage.SIDERBAR__RADIO:
        return ((InternalEList<?>)getRadio()).basicRemove(otherEnd, msgs);
      case MyDslPackage.SIDERBAR__CHECKBOX:
        return ((InternalEList<?>)getCheckbox()).basicRemove(otherEnd, msgs);
      case MyDslPackage.SIDERBAR__BUTTON:
        return ((InternalEList<?>)getButton()).basicRemove(otherEnd, msgs);
      case MyDslPackage.SIDERBAR__SELECTOR:
        return ((InternalEList<?>)getSelector()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SIDERBAR__NAME:
        return getName();
      case MyDslPackage.SIDERBAR__DESCRIPTION:
        return getDescription();
      case MyDslPackage.SIDERBAR__RADIO:
        return getRadio();
      case MyDslPackage.SIDERBAR__CHECKBOX:
        return getCheckbox();
      case MyDslPackage.SIDERBAR__BUTTON:
        return getButton();
      case MyDslPackage.SIDERBAR__SELECTOR:
        return getSelector();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SIDERBAR__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.SIDERBAR__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case MyDslPackage.SIDERBAR__RADIO:
        getRadio().clear();
        getRadio().addAll((Collection<? extends Radio>)newValue);
        return;
      case MyDslPackage.SIDERBAR__CHECKBOX:
        getCheckbox().clear();
        getCheckbox().addAll((Collection<? extends Checkbox>)newValue);
        return;
      case MyDslPackage.SIDERBAR__BUTTON:
        getButton().clear();
        getButton().addAll((Collection<? extends Button>)newValue);
        return;
      case MyDslPackage.SIDERBAR__SELECTOR:
        getSelector().clear();
        getSelector().addAll((Collection<? extends Selector>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SIDERBAR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.SIDERBAR__DESCRIPTION:
        setDescription((Description)null);
        return;
      case MyDslPackage.SIDERBAR__RADIO:
        getRadio().clear();
        return;
      case MyDslPackage.SIDERBAR__CHECKBOX:
        getCheckbox().clear();
        return;
      case MyDslPackage.SIDERBAR__BUTTON:
        getButton().clear();
        return;
      case MyDslPackage.SIDERBAR__SELECTOR:
        getSelector().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SIDERBAR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.SIDERBAR__DESCRIPTION:
        return description != null;
      case MyDslPackage.SIDERBAR__RADIO:
        return radio != null && !radio.isEmpty();
      case MyDslPackage.SIDERBAR__CHECKBOX:
        return checkbox != null && !checkbox.isEmpty();
      case MyDslPackage.SIDERBAR__BUTTON:
        return button != null && !button.isEmpty();
      case MyDslPackage.SIDERBAR__SELECTOR:
        return selector != null && !selector.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //SiderbarImpl
