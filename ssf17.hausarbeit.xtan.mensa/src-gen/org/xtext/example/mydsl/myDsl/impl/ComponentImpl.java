/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Button;
import org.xtext.example.mydsl.myDsl.Component;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Radio;
import org.xtext.example.mydsl.myDsl.Selector;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ComponentImpl#getSelector <em>Selector</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ComponentImpl#getButton <em>Button</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ComponentImpl#getRadio <em>Radio</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentImpl extends MinimalEObjectImpl.Container implements Component
{
  /**
   * The cached value of the '{@link #getSelector() <em>Selector</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected EList<Selector> selector;

  /**
   * The cached value of the '{@link #getButton() <em>Button</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getButton()
   * @generated
   * @ordered
   */
  protected EList<Button> button;

  /**
   * The cached value of the '{@link #getRadio() <em>Radio</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRadio()
   * @generated
   * @ordered
   */
  protected EList<Radio> radio;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Selector> getSelector()
  {
    if (selector == null)
    {
      selector = new EObjectContainmentEList<Selector>(Selector.class, this, MyDslPackage.COMPONENT__SELECTOR);
    }
    return selector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Button> getButton()
  {
    if (button == null)
    {
      button = new EObjectContainmentEList<Button>(Button.class, this, MyDslPackage.COMPONENT__BUTTON);
    }
    return button;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Radio> getRadio()
  {
    if (radio == null)
    {
      radio = new EObjectContainmentEList<Radio>(Radio.class, this, MyDslPackage.COMPONENT__RADIO);
    }
    return radio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPONENT__SELECTOR:
        return ((InternalEList<?>)getSelector()).basicRemove(otherEnd, msgs);
      case MyDslPackage.COMPONENT__BUTTON:
        return ((InternalEList<?>)getButton()).basicRemove(otherEnd, msgs);
      case MyDslPackage.COMPONENT__RADIO:
        return ((InternalEList<?>)getRadio()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPONENT__SELECTOR:
        return getSelector();
      case MyDslPackage.COMPONENT__BUTTON:
        return getButton();
      case MyDslPackage.COMPONENT__RADIO:
        return getRadio();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPONENT__SELECTOR:
        getSelector().clear();
        getSelector().addAll((Collection<? extends Selector>)newValue);
        return;
      case MyDslPackage.COMPONENT__BUTTON:
        getButton().clear();
        getButton().addAll((Collection<? extends Button>)newValue);
        return;
      case MyDslPackage.COMPONENT__RADIO:
        getRadio().clear();
        getRadio().addAll((Collection<? extends Radio>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPONENT__SELECTOR:
        getSelector().clear();
        return;
      case MyDslPackage.COMPONENT__BUTTON:
        getButton().clear();
        return;
      case MyDslPackage.COMPONENT__RADIO:
        getRadio().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPONENT__SELECTOR:
        return selector != null && !selector.isEmpty();
      case MyDslPackage.COMPONENT__BUTTON:
        return button != null && !button.isEmpty();
      case MyDslPackage.COMPONENT__RADIO:
        return radio != null && !radio.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ComponentImpl
