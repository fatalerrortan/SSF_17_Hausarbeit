/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMensamodel
entryRuleMensamodel
:
{ before(grammarAccess.getMensamodelRule()); }
	 ruleMensamodel
{ after(grammarAccess.getMensamodelRule()); } 
	 EOF 
;

// Rule Mensamodel
ruleMensamodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMensamodelAccess().getElementsAssignment()); }
		(rule__Mensamodel__ElementsAssignment)*
		{ after(grammarAccess.getMensamodelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHtml_Id
entryRuleHtml_Id
:
{ before(grammarAccess.getHtml_IdRule()); }
	 ruleHtml_Id
{ after(grammarAccess.getHtml_IdRule()); } 
	 EOF 
;

// Rule Html_Id
ruleHtml_Id 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHtml_IdAccess().getGroup()); }
		(rule__Html_Id__Group__0)
		{ after(grammarAccess.getHtml_IdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHtml_Class
entryRuleHtml_Class
:
{ before(grammarAccess.getHtml_ClassRule()); }
	 ruleHtml_Class
{ after(grammarAccess.getHtml_ClassRule()); } 
	 EOF 
;

// Rule Html_Class
ruleHtml_Class 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHtml_ClassAccess().getGroup()); }
		(rule__Html_Class__Group__0)
		{ after(grammarAccess.getHtml_ClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContent
entryRuleContent
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContentAccess().getGroup()); }
		(rule__Content__Group__0)
		{ after(grammarAccess.getContentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagKeyword_0()); }
	'tag'
	{ after(grammarAccess.getTagAccess().getTagKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getNameAssignment_1()); }
	(rule__Tag__NameAssignment_1)
	{ after(grammarAccess.getTagAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__2__Impl
	rule__Tag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTagAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__3__Impl
	rule__Tag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getIdAssignment_3()); }
	(rule__Tag__IdAssignment_3)?
	{ after(grammarAccess.getTagAccess().getIdAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__4__Impl
	rule__Tag__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getClass_hAssignment_4()); }
	(rule__Tag__Class_hAssignment_4)?
	{ after(grammarAccess.getTagAccess().getClass_hAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__5__Impl
	rule__Tag__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getContentAssignment_5()); }
	(rule__Tag__ContentAssignment_5)?
	{ after(grammarAccess.getTagAccess().getContentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__6__Impl
	rule__Tag__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getChildrenAssignment_6()); }
	(rule__Tag__ChildrenAssignment_6)*
	{ after(grammarAccess.getTagAccess().getChildrenAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getTagAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Html_Id__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_Id__Group__0__Impl
	rule__Html_Id__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Id__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_IdAccess().getIdKeyword_0()); }
	'id'
	{ after(grammarAccess.getHtml_IdAccess().getIdKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Id__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_Id__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Id__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_IdAccess().getNameAssignment_1()); }
	(rule__Html_Id__NameAssignment_1)
	{ after(grammarAccess.getHtml_IdAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Html_Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_Class__Group__0__Impl
	rule__Html_Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_ClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getHtml_ClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_Class__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_ClassAccess().getNameAssignment_1()); }
	(rule__Html_Class__NameAssignment_1)
	{ after(grammarAccess.getHtml_ClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Content__Group__0__Impl
	rule__Content__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContentAccess().getContentKeyword_0()); }
	'content'
	{ after(grammarAccess.getContentAccess().getContentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Content__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContentAccess().getNameAssignment_1()); }
	(rule__Content__NameAssignment_1)
	{ after(grammarAccess.getContentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mensamodel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMensamodelAccess().getElementsTagParserRuleCall_0()); }
		ruleTag
		{ after(grammarAccess.getMensamodelAccess().getElementsTagParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTagAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__IdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getIdHtml_IdParserRuleCall_3_0()); }
		ruleHtml_Id
		{ after(grammarAccess.getTagAccess().getIdHtml_IdParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Class_hAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getClass_hHtml_ClassParserRuleCall_4_0()); }
		ruleHtml_Class
		{ after(grammarAccess.getTagAccess().getClass_hHtml_ClassParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__ContentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getContentContentParserRuleCall_5_0()); }
		ruleContent
		{ after(grammarAccess.getTagAccess().getContentContentParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__ChildrenAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getChildrenTagParserRuleCall_6_0()); }
		ruleTag
		{ after(grammarAccess.getTagAccess().getChildrenTagParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Id__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtml_IdAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getHtml_IdAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_Class__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtml_ClassAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getHtml_ClassAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getContentAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
